<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
    <!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->
    <mvc:resources location="/*.html" mapping="/**.html"/>
    <mvc:resources location="/css/*" mapping="/css/**"/>
    <mvc:resources location="/js/*" mapping="/js/**"/>
    <mvc:resources location="/images/*" mapping="/images/**"/>
    <!-- 设定消息转换的编码为utf-8防止controller返回中文乱码 -->
    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                        class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <!-- 添加注解驱动 -->
    <mvc:annotation-driven/>
    <!-- 默认扫描的包路径 -->
    <context:component-scan base-package="com.sac.controller"/>

    <!-- mvc:view-controller可以在不需要Controller处理request的情况，转向到设置的View -->
    <!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->
    <mvc:view-controller path="/" view-name="index"/>
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"></property>
        <!-- 配置jsp路径前缀 -->
        <property name="prefix" value="/"></property>
        <!-- 配置URl后缀 -->
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--配置任务调度-->


    <!--配置任务-->
    <!--第一个任务-->
    <bean id="simpleJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!--执行的目标-->
        <property name="targetObject" ref="myBean"/>
        <!--执行的目标方法-->
        <property name="targetMethod" value="printMessage"/>
    </bean>

    <!--第二个任务 给任务传递数据-->
    <bean id="firstComplexJobDetail"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!--执行的任务-->
        <property name="jobClass"
                  value="com.sac.quartz.FirstScheduledJob"/>
        <!--执行任务的参数-->
        <property name="jobDataMap">
            <map>
                <entry key="anotherBean" value-ref="anotherBean"/>
                <entry key="name" value="wwg"></entry>
            </map>
        </property>
        <property name="Durability" value="true"/>
    </bean>


    <!--配置trigger-->
    <!--第一个trigger-->
    <!-- 距离当前时间1秒之后执行，之后每隔两秒钟执行一次 -->
    <bean id="mySimpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="simpleJobDetail"/>
        <property name="startDelay" value="1000"/>
        <property name="repeatInterval" value="2000"/>
    </bean>

    <!--第二个trigger-->
    <!-- 每隔5秒钟执行一次 -->
    <bean id="myCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="firstComplexJobDetail"/>
        <property name="cronExpression" value="0/5 * * ? * *"/>
    </bean>


    <!--配置schedual-->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
                <ref bean="simpleJobDetail"/>
                <ref bean="firstComplexJobDetail"/>
            </list>
        </property>
        <property name="triggers">
            <list>
                <ref bean="mySimpleTrigger"/>
                <ref bean="myCronTrigger"/>
            </list>
        </property>
    </bean>

</beans>